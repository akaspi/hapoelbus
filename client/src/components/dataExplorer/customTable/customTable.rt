<rt-require dependency="material-ui" as="mui"/>
<rt-require dependency="lodash" as="_"/>
<rt-require dependency="../../../../../common/dateUtils" as="dateUtils"/>

<div class="custom-table">
    <div rt-if="!this.state.updateMode && !this.state.createMode" key="key-custom-table-show-display-view" class="display-view">
        <div class="table-header">
            <mui.FloatingActionButton
                    rt-if="this.props.onRemove"
                    onClick="{this.onRemove}"
                    key="key-remove-record-btn"
                    disabled="{_.isEmpty(this.state.selectedData)}"
                    mini={true}
                    backgroundColor="#e74c3c"
                    iconStyle="{{color: '#fff'}}">
                <i class="fa fa-trash"/>
            </mui.FloatingActionButton>

            <mui.FloatingActionButton
                    rt-if="this.props.onUpdate"
                    key="key-update-record-btn"
                    disabled="{_.isEmpty(this.state.selectedData)}"
                    mini={true}
                    backgroundColor="#e74c3c"
                    iconStyle="{{color: '#fff'}}"
                    onClick="{this.goToUpdateMode}">
                <i class="fa fa-pencil"/>
            </mui.FloatingActionButton>

            <mui.FloatingActionButton
                    rt-if="this.props.onCreate"
                    key="key-create-record-btn"
                    mini={true}
                    backgroundColor="#fff"
                    iconStyle="{{color: '#e74c3c'}}"
                    onClick="{this.goToCreateMode}">
                <i class="fa fa-plus"/>
            </mui.FloatingActionButton>
        </div>
        <mui.Table
                height="{'500px'}"
                fixedHeader="{true}"
                fixedFooter="{false}"
                selectable="{true}"
                multiSelectable="{false}"
                onRowSelection="{this.onRowSelection}">

            <mui.TableHeader enableSelectAll="{false}">
                <mui.TableRow>
                    <mui.TableHeaderColumn colSpan="{_.size(this.props.schema)}" style="{{textAlign: 'center'}}">
                        <span>מס׳ רשומות</span>
                        <span class="users-data-count">{_.size(this.props.data)}</span>
                    </mui.TableHeaderColumn>
                </mui.TableRow>
                <mui.TableRow>
                    <mui.TableHeaderColumn rt-repeat="title in _.pluck(this.props.schema, 'title')">{title}</mui.TableHeaderColumn>
                </mui.TableRow>
            </mui.TableHeader>

            <mui.TableBody deselectOnClickaway="{false}" showRowHover="{false}" stripedRows="{false}">
                <mui.TableRow rt-repeat="dataItem in this.props.data" selected="{_.isEqual(dataItemIndex, this.state.selectedKey)}" onClick="{this.testClickRow}">
                    <mui.TableRowColumn rt-repeat="schemaItem in this.props.schema">
                        <div rt-if="schemaItem.type === 'boolean'" key="key-boolean-value">
                            <i rt-if="dataItem[schemaItemIndex]" key="key-boolean-value-true" class="fa fa-plus"/>
                            <i rt-if="!dataItem[schemaItemIndex]" key="key-boolean-value-false" class="fa fa-minus"/>
                        </div>
                        <div rt-if="schemaItem.type === 'date'" key="key-boolean-value">
                            <span>{dateUtils.convertDate(dataItem[schemaItemIndex])}</span>
                        </div>
                        <div rt-if="schemaItem.type === 'time'" key="key-boolean-value">
                            <span>{dateUtils.convertTime(dataItem[schemaItemIndex])}</span>
                        </div>
                        <div rt-if="schemaItem.type === 'enum'" key="key-boolean-value">
                            <span>{_.find(schemaItem.options, {value: dataItem[schemaItemIndex]}).title}</span>
                        </div>
                        <div rt-if="_.contains(['string', 'number'], schemaItem.type)" key="key-string-or-number-value">
                            <span>{dataItem[schemaItemIndex]}</span>
                        </div>
                    </mui.TableRowColumn>
                </mui.TableRow>
            </mui.TableBody>
        </mui.Table>
    </div>
    <div rt-if="this.state.updateMode || this.state.createMode" key="key-custom-table-show-edit-view" class="edit-view">
        <h1>{this.state.updateMode ? 'עריכת רשומה' : 'יצירת רשומה'}</h1>
        <div class="edit-fields">
            <div rt-repeat="schemaItem in this.props.schema" class="edit-item">
                <div rt-if="schemaItem.type === 'boolean'" key="key-number-edit-item">
                    <mui.Toggle class="edit-item toggle-item"
                                labelStyle="{{float: 'none', fontSize: '14px'}}"
                                defaultToggled="{this.state.editedData[schemaItemIndex]}"
                                onToggle="{this.onToggleChange.bind(this, schemaItemIndex)}"
                                label="{schemaItem.title}"
                                labelPosition="right"/>
                </div>
                <div rt-if="schemaItem.type === 'number'" key="key-number-edit-item">
                    <mui.TextField type="number" floatingLabelText="{schemaItem.title}" style="{{width: '256px', marginTop: '-24px'}}" valueLink="{this.linkState('editedData.' + schemaItemIndex, 'number')}" />
                </div>
                <div rt-if="schemaItem.type === 'string'" key="key-string-edit-item">
                    <mui.TextField floatingLabelText="{schemaItem.title}" style="{{width: '256px', marginTop: '-24px'}}" valueLink="{this.linkState('editedData.' + schemaItemIndex)}" />
                </div>
                <div rt-if="schemaItem.type === 'date'" key="key-date-edit-item">
                    <mui.DatePicker
                            rt-scope="this.state.editedData[schemaItemIndex] as value"
                            hintText="{schemaItem.title}"
                            onChange="{this.onDateChange.bind(this, schemaItemIndex)}"
                            value="{value && new Date(value)}"
                            formatDate="{dateUtils.convertDate}"/>
                </div>
                <div rt-if="schemaItem.type === 'time'" key="key-time-edit-item">
                    <mui.TimePicker
                            rt-scope="this.state.editedData[schemaItemIndex] as value"
                            format="24hr"
                            hintText="{schemaItem.title}"
                            onChange="{this.onTimeChange.bind(this, schemaItemIndex)}"
                            value="{value && dateUtils.convertTime(new Date(value))}"/>
                </div>
                <div rt-if="schemaItem.type === 'enum'" key="key-enum-edit-item">
                    <mui.SelectField
                            style="{{width: '100%', marginTop: '12px'}}"
                            menuItems="{schemaItem.options}"
                            valueMember="value"
                            displayMember="title"
                            value="{this.state.editedData[schemaItemIndex]}"
                            hintText="{'בחר' + ' ' + schemaItem.title}"
                            onChange="{this.onEnumChanged.bind(this, schemaItemIndex)}"
                            iconStyle="{{right: 'initial', left: '16px'}}"
                            underlineStyle="{{margin: '-3px'}}"/>
                </div>
            </div>
        </div>
        <div class="actions">
            <mui.FlatButton rt-if="this.state.updateMode" key="key-update-record-btn" style="{{paddingLeft: '16px'}}" secondary="{true}" label="עדכן רשומה" onClick="{this.onUpdate}">
                <i class="fa fa-save"/>
            </mui.FlatButton>
            <mui.FlatButton rt-if="this.state.createMode" key="key-update-record-btn" style="{{paddingLeft: '16px'}}" secondary="{true}" label="צור רשומה" onClick="{this.onCreate}">
                <i class="fa fa-save"/>
            </mui.FlatButton>
            <mui.FlatButton style="{{paddingLeft: '16px'}}" primary="{true}" label="חזור" onClick="{this.goToViewMode}">
                <i class="fa fa-arrow-left"/>
            </mui.FlatButton>
        </div>
    </div>

    <mui.Dialog
            ref="removeDialog"
            contentStyle="{{'width':'360'}}"
            title="זהירות!"
            actions="{this.getRemoveDialogActions()}"
            modal="{false}">
        <span>האם אתה בטוח שברצונך למחוק את הרשומה?</span>
    </mui.Dialog>
</div>
