<rt-require dependency="material-ui" as="mui"/>
<rt-require dependency="../gameCard/gameCard" as="gameCard"/>
<rt-require dependency="../loading/loading" as="loading"/>
<rt-require dependency="../../constants/gamesConstants" as="gamesConstants"/>

<div class="user-dashboard"
     rt-scope="(this.state.isGamesStorePending || this.state.isPaymentsStorePending || this.state.isBookingStorePending || this.state.isOccupiedStorePending) as isPending">

    <loading rt-if="isPending" key="key-fetching-user-data"/>

    <div class="no-open-games" rt-if="!isPending && _.isEmpty(this.state.openGames)" key="key-no-open-games">
        <h1>
            <span>שלום </span>
            <span>{this.props.usersData[this.props.uid].displayName}</span>
            <span>!</span>
        </h1>
        <h1>
            <span>אין משחקים פתוחים כעת...</span>
        </h1>
        <h2>
            <span>אנא נסה/י שוב במועד מאוחר יותר :)</span>
        </h2>
    </div>

    <div class="games-wrapper" rt-if="!isPending && !_.isEmpty(this.state.openGames)" key="key-no-open-games">
        <div class="card-wrapper" rt-repeat="game in this.state.openGames">
            <gameCard uid="{this.props.uid}"
                      gameId="{gameIndex}"
                      gameData="{game}"
                      booking="{this.state.booking[this.props.uid] && this.state.booking[this.props.uid][gameIndex]}"
                      payments="{this.state.payments[this.props.uid]}"
                      occupied="{this.state.occupied[gameIndex]}"/>
        </div>
    </div>
</div>